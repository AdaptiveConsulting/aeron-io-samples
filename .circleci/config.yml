---
version: 2.1

orbs:
  gradle: circleci/gradle@3.0.0
  aws-cli: circleci/aws-cli@5.4.0
  aws-ecr: circleci/aws-ecr@9.5.2
  slack: circleci/slack@5.1.1

parameters:
  openjdk-tag:
    type: string
    default: '21.0'
  slack-notification-channel:
    type: string
    default: 'GSMSBFBJ5'

jobs:
  build_and_push:
    executor:
      name: aws-ecr/default
    steps:
      - attach_workspace:
          at: '.'
      - run:
          command: |
            echo 'export ECR_TAG=cluster-sample${CIRCLE_TAG:+-v${CIRCLE_TAG}}-git${CIRCLE_SHA1:0:7}' >> "$BASH_ENV"

      - aws-ecr/build_and_push_image:
          attach_workspace: false  # done already
          auth:
            - aws-cli/setup:
                profile_name: OIDC_USER
                role_arn: ${AWS_ROLE_ARN}
          build_path: docker
          checkout: false
          extra_build_args: >-
            --build-context gradle=./cluster
          path: docker
          profile_name: OIDC_USER
          push_image: false
          repo: adaptive/aeron-premium
          repo_encryption_kms_key: aws/ecr
          repo_encryption_type: KMS
          tag: ${ECR_TAG}

      - when:
          condition: << pipeline.git.tag >>
          steps:
            - aws-ecr/push_image:
                repo: adaptive/aeron-premium
                tag: ${ECR_TAG}

  success:
    docker:
      - image: cimg/base:stable
    steps:
      - slack/notify:
          channel: <<pipeline.parameters.slack-notification-channel>>
          event: pass
          template: basic_success_1

workflows:
  on_commit:
    jobs:
      - gradle/test:
          context:
            - slack
          deps_checksum_file: gradle/libs.versions.toml
          executor:
            name: 'gradle/default'
            tag: <<pipeline.parameters.openjdk-tag>>
          filters:
            tags:
              only: /^v.*/
          post-steps:
            - slack/notify:
                channel: <<pipeline.parameters.slack-notification-channel>>
                event: fail
                template: basic_fail_1
            - persist_to_workspace:
                root: '.'
                paths:
                  - "cluster/build/libs/*-uber.jar"
                  - "cluster/*.sh"
                  - "docker/Dockerfile"
                  - "docker/.env"
          test_command: ""  # default build
          test_results_path: "cluster/build/test-results/"
          reports_path: "cluster/build/reports/"

      - build_and_push:
          context:
            - slack
          filters:
            tags:
              only: /^v.*/
          requires:
            - gradle/test
          post-steps:
            - slack/notify:
                channel: <<pipeline.parameters.slack-notification-channel>>
                event: fail
                template: basic_fail_1

      - success:
          context:
            - slack
          filters:
            tags:
              only: /^v.*/
          requires:
            - gradle/test
            - build_and_push
